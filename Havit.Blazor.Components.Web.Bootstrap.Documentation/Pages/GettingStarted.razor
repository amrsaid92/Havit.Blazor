@page "/get-started"
@page "/intro"

<DocHeading Title="Getting started" Level="1" />

<DocHeading Title="Prerequisites" Level="2" />
<p>Havit.Blazor components have the following requirements:</p>
<ul>
	<li>.NET 6.0 or newer (<code>net6.0</code> and <code>net7.0</code> multitargeting; <code>net5.0</code> support dropped in v3.2)</li>
	<li>Blazor WebAssembly or Blazor Server hosting model (other options not tested yet)</li>
</ul>

<DocHeading Title="Installation" Level="2" />

<DocAlert Type="DocAlertType.Info">
	Try our <a href="https://github.com/havit/NewProjectTemplate-Blazor">enterprise project template</a> which includes layered architecture, EF Core, gRPC code-first, ...
</DocAlert>

<DocHeading Title="1. NuGet package" Level="3" />
<p>Find the <a href="https://www.nuget.org/packages/Havit.Blazor.Components.Web.Bootstrap/">Havit.Blazor.Components.Web.Bootstrap</a> package through NuGet Package Manager or install it with following command:</p>
<CodeSnippet Language="none">dotnet add package Havit.Blazor.Components.Web.Bootstrap</CodeSnippet>

<DocHeading Title="2. CSS &amp; JavaScript" Level="3" />
<p>Add CSS &amp; JavaScript references.</p>
<DocHeading Title="CSS" Level="4" />
<p>Add the following to your HTML <code>&lt;head&gt;</code> section, it's either <code>index.html</code> or <code>_Host.cshtml</code>/<code>_Layout.cshtml</code> depending on whether you're running WebAssembly or Server:</p>
<CodeSnippet File="~\Pages\GettingStarted_CSS.CodeSnippet.html" />

<p>If you want to use our custom Bootstrap theme (used in this documentation and demos), replace the first <code>link</code> with:</p>
<CodeSnippet File="~\Pages\GettingStarted_CustomCSS.CodeSnippet.html" />
<p>You can reference your own or any other Bootstrap build/theme in a same way.</p>

<DocAlert Type="DocAlertType.Warning">
	If you're using a standard Blazor template make sure to remove unnecessary code from <code>site.css</code> and remove the <code>bootstrap.min.css</code> completely from either <code>index.html</code> or <code>_Host.cshtml</code>/<code>_Layout.cshtml</code>.
</DocAlert>

<DocHeading Title="Bootstrap JavaScript" Id="javascript" Level="4" />
<p>At the end of HTML <code>&lt;body&gt;</code> section of either <code>index.html</code> add this (Bootstrap JavaScript Bundle with Popper):</p>
<CodeSnippet Language="razor">&lt;!-- JavaScript Bundle with Popper --&gt;&#10;@HxSetup.RenderBootstrapJavaScriptReference()</CodeSnippet>
<p>It you are hosting you Blazor app in ASP.NET Core server-generated HTML file (e.g. <code>_Host.cshtml</code>/<code>_Layout.cshtml</code>), you can use our helper-method to emit the <code>&lt;script /&gt;</code> tag and automate versioning:</p>
<CodeSnippet Language="razor">&lt;!-- JavaScript Bundle with Popper --&gt;&#10;@@Html.Raw(HxSetup.RenderBootstrapJavaScriptReference())</CodeSnippet>

<DocHeading Title="3. Import namespaces" Level="3" />
<p>Add following to your <code>_Imports.razor</code> file:</p>
<CodeSnippet File="~\Pages\GettingStarted_Namespaces.CodeSnippet.razor" />

<DocHeading Title="4. Register services" Level="3" />
<p>For <strong>Blazor WebAssembly</strong> add the following to your <code>Program.Main</code>:</p>
<CodeSnippet File="~\Pages\GettingStarted_RegisterServices.CodeSnippet.cs" />
<p>
	For <strong>Blazor Server</strong> (or WASM with server pre-rendering) add those registrations to your <code>Startup.cs</code> file, <code>ConfigureServices()</code> method.
	(You won't use the <code>builder</code> there, register the services to the <code>services</code> collection.)
</p>

<DocHeading Title="5. Specific components support" Level="3" />
<p>[OPTIONAL] Some of the components need a specific project setup to work. This usually includes registering a service and adding a host-component to <code>App.razor</code> or layout component.</p>
<p>For instructions see documentation of those components:</p>
<ul>
	<li><a href="/components/@nameof(HxMessenger)">@nameof(HxMessenger)</a> - displaying new toast-messages from your code easily</li>
	<li><a href="/components/@nameof(HxMessageBoxHost)">@nameof(HxMessageBoxHost)</a> - opening message-boxes (and await results) from your code</li>
</ul>

<DocHeading Title="Ready, set, go!" Id="done" Level="2" />
<p>Now you are ready to use all the components in your razor files. They come with <code>Hx</code> prefix. IntelliSense will be your friend...</p>
<Demo Type="typeof(GettingStarted_Demo)" Tabs="false" />

<DocAlert Type="DocAlertType.Info">
	This whole documentation is built using the Havit.Blazor library and is running as Blazor WebAssembly ASP.NET Core Hosted project with server-prerendering.
	See <a href="https://github.com/havit/Havit.Blazor/tree/master/Havit.Blazor.Components.Web.Bootstrap.Documentation">documentation source code on GitHub</a>.
</DocAlert>
